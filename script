local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Zbot",
    Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
    LoadingTitle = "Zbot",
    LoadingSubtitle = "by ZBOT",
    Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes
 
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
 
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Big Hub"
    },
 
    Discord = {
       Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
 
    KeySystem = true, -- Set this to true to use our key system
    KeySettings = {
       Title = "Key",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"key"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

local Movement = Window:CreateTab("Movement", 4483362458) -- Title, Image
local Section = Movement:CreateSection("Movement")

local Divider = Movement:CreateDivider()

-- Create Walk Speed Slider
local Slider = Movement:CreateSlider({
   Name = "Walk Speed", -- Displayed name for the slider
   Range = {0, 100}, -- Walk speed range from 0 to 100
   Increment = 10, -- Increment value for each adjustment
   Suffix = "Walk Speed", -- Text that appears after the value
   CurrentValue = 10, -- Default value for the walk speed
   Flag = "Walk Speed", -- Configuration flag for saving the value
   Callback = function(Value)
       -- Function that executes when the slider value is changed
       
       -- Ensure the player has a character and humanoid object
       local player = game.Players.LocalPlayer
       local character = player.Character or player.CharacterAdded:Wait()
       local humanoid = character:WaitForChild("Humanoid")

       -- Set the player's walk speed to the selected slider value
       humanoid.WalkSpeed = Value
   end,
})

Rayfield:LoadConfiguration()
